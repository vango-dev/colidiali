{"version":3,"file":"static/js/390.9a6d526a.chunk.js","mappings":"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","sources":["pages/dashboard/TrasnporterPrices.js"],"sourcesContent":["import {\n  Box,\n  Card,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Slider,\n  Stack,\n  Typography,\n  styled,\n  TextField,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nimport { useEffect, useState } from 'react';\nimport Iconify from '../../components/Iconify';\nimport Page from '../../components/Page';\nimport useResponsive from '../../hooks/useResponsive';\nimport { dispatch, useSelector } from '../../redux/store';\nimport {\n  addTransporterCategory,\n  deleteTransporterCategory,\n  getTransporterCategories,\n  updateTransporterCategory,\n} from '../../redux/slices/category';\nimport { useSnackbar } from 'notistack';\n\n// ----------------------------------------------------------------------\nconst PricesSlider = styled(Slider)({\n  color: '#F56B3D',\n  height: 8,\n  '& .MuiSlider-track': {\n    border: 'none',\n  },\n  '& .MuiSlider-thumb': {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n      boxShadow: 'inherit',\n    },\n    '&::before': {\n      display: 'none',\n    },\n  },\n  '& .MuiSlider-valueLabel': {\n    lineHeight: 1.2,\n    fontSize: 12,\n    background: 'unset',\n    padding: 0,\n    width: 32,\n    height: 32,\n    borderRadius: '50% 50% 50% 0',\n    backgroundColor: '#F56B3D',\n    transformOrigin: 'bottom left',\n    transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\n    '&::before': { display: 'none' },\n    '&.MuiSlider-valueLabelOpen': {\n      transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',\n    },\n    '& > *': {\n      transform: 'rotate(45deg)',\n    },\n  },\n});\n// ----------------------------------------------------------------------\n\nexport default function TransporterPrices() {\n  const smUp = useResponsive('up', 'sm');\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [category, setCategory] = useState({ name: '', value: 0 });\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingValue, setEditingValue] = useState(null);\n\n  const [editingName, setEditingName] = useState(null);\n\n  const [displayAddCategory, setDisplayAddCategory] = useState(false);\n\n  const { categories } = useSelector((state) => state.category);\n\n  useEffect(() => {\n    dispatch(getTransporterCategories());\n  }, []);\n\n  const handleSliderChange = (index, value) => {\n    setEditingCategory(index);\n    setEditingValue(value);\n  };\n\n  const handleNameChange = (index, name) => {\n    setEditingCategory(index);\n    setEditingName(name);\n  };\n\n  const handleUpdateCategory = async (index) => {\n    const updatedCategory = {\n      name: editingName !== null ? editingName : categories[index].name,\n      value: editingValue !== null ? editingValue : categories[index].value,\n    };\n    const categoryId = categories[index]?._id;\n\n    try {\n      dispatch(updateTransporterCategory(categoryId, updatedCategory));\n      setEditingCategory(null);\n      setEditingValue(null);\n      setEditingName(null);\n      enqueueSnackbar('Modification effectuÃ©e avec succÃ¨s', {\n        variant: 'success',\n      });\n    } catch (error) {\n      console.log('ðŸš€ ~ handleUpdateCategory ~ error:', error);\n      enqueueSnackbar(error, { variant: 'error' });\n      setEditingCategory(null);\n      setEditingValue(null);\n      setEditingName(null);\n    }\n  };\n\n  const handleAddCategory = async () => {\n    if (!category.name || category.value === 0) {\n      alert('Please enter a valid category name and value.');\n      return;\n    }\n\n    try {\n      await dispatch(addTransporterCategory(category));\n      setCategory({ name: '', value: 0 });\n      setDisplayAddCategory(false);\n      enqueueSnackbar('CatÃ©gorie crÃ©Ã© avec succÃ¨s', { variant: 'success' });\n    } catch (error) {\n      console.log('ðŸš€ ~ handleAddCategory ~ error:', error);\n      enqueueSnackbar(error, { variant: 'error' });\n    }\n  };\n\n  const handleDeleteCategory = async (index) => {\n    const categoryId = categories[index]._id;\n    try {\n      dispatch(deleteTransporterCategory(categoryId));\n      enqueueSnackbar('CatÃ©gorie supprimÃ© avec succÃ¨s', { variant: 'warning' });\n    } catch (error) {\n      console.log('ðŸš€ ~ handleDeleteCategory ~ error:', error);\n      enqueueSnackbar(error, { variant: 'error' });\n    }\n  };\n\n  return (\n    <Page title='Dashboard: Prices'>\n      <Container maxWidth={'xl'}>\n        <Card>\n          <CardHeader\n            sx={{ position: 'absolute', top: smUp ? 10 : 160, zIndex: 10000 }}\n            titleTypographyProps={{ fontSize: smUp ? 120 : 18 }}\n            title='Dashboard'\n          />\n\n          <Grid\n            container\n            alignItems={'center'}\n            justifyContent={'center'}\n            py={smUp ? 5 : 2}\n            pr={{ md: 5, xs: 0 }}\n          >\n            <Grid item xs={12} md={10}>\n              <Stack mb={{ md: 5, xs: 2 }} mx={{ md: 0, xs: 3 }}>\n                <Typography\n                  variant='h5'\n                  mb={{ md: 2, xs: 1 }}\n                  sx={{ fontWeight: 450 }}\n                >\n                  Adjust Delivery Prices{' '}\n                </Typography>\n                <Typography variant='p'>\n                  As a transporter, you can define prices based on the type of\n                  deliveries you handle. Use the sliders below to set your\n                  prices for different categories. You can add new categories as\n                  needed.\n                </Typography>\n                <Divider />\n              </Stack>\n              <Box\n                sx={{\n                  display: 'grid',\n                  columnGap: 2,\n                  rowGap: 3,\n                  px: { md: 0, xs: 2 },\n                  gridTemplateColumns: {\n                    xs: 'repeat(1,1fr)',\n                    sm: 'repeat(1,1fr)',\n                  },\n                }}\n              >\n                {categories?.map((category, index) => (\n                  <Grid\n                    container\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    spacing={3}\n                    key={index}\n                  >\n                    <Grid item md={2}>\n                      {editingCategory === index ? (\n                        <TextField\n                          value={editingName ? editingName : category.name}\n                          onChange={(e) =>\n                            handleNameChange(index, e.target.value)\n                          }\n                        />\n                      ) : (\n                        <Typography\n                          variant='subtitle1'\n                          gutterBottom\n                          onClick={() => setEditingCategory(index)}\n                        >\n                          {category.name}\n                        </Typography>\n                      )}\n                    </Grid>\n                    <Grid item md={5}>\n                      <PricesSlider\n                        valueLabelDisplay='auto'\n                        aria-label='price slider'\n                        value={\n                          editingCategory === index && editingValue !== null\n                            ? editingValue\n                            : category.value\n                        }\n                        onChange={(e, value) =>\n                          handleSliderChange(index, value)\n                        }\n                      />\n                    </Grid>\n                    <Grid item md={2}>\n                      <Typography\n                        gutterBottom\n                        variant='subtitle1'\n                        sx={{\n                          textAlign: 'center',\n                          border: 'solid 1px black',\n                          borderRadius: 1,\n                          borderColor: '#DDDCE0',\n                        }}\n                        p={1}\n                      >\n                        {editingCategory === index && editingValue !== null\n                          ? editingValue\n                          : category.value}{' '}\n                        euro/kg\n                      </Typography>\n                    </Grid>\n                    <Grid item md={1} sx={{ display: 'flex' }}>\n                      <IconButton onClick={() => handleDeleteCategory(index)}>\n                        <Iconify icon='octicon:trash-24' />\n                      </IconButton>\n                      {editingCategory === index ? (\n                        <IconButton\n                          onClick={() => {\n                            handleUpdateCategory(index);\n                          }}\n                        >\n                          <Iconify\n                            icon='icon-park-outline:check-one'\n                            color='green'\n                          />\n                        </IconButton>\n                      ) : null}\n                    </Grid>\n                  </Grid>\n                ))}\n              </Box>\n\n              <Stack\n                direction='row'\n                spacing={2}\n                justifyContent='flex-start'\n                alignItems='center'\n                my={3}\n              >\n                <IconButton\n                  onClick={() => setDisplayAddCategory(!displayAddCategory)}\n                >\n                  <Iconify\n                    icon={\n                      !displayAddCategory\n                        ? 'material-symbols:add-box'\n                        : 'ph:minus-fill'\n                    }\n                    color='#F56B3D'\n                    mr={1}\n                  />\n                  <Typography variant='subtitle2' sx={{ color: 'black' }}>\n                    Add category\n                  </Typography>\n                </IconButton>\n              </Stack>\n\n              {displayAddCategory && (\n                <>\n                  <Box\n                    sx={{\n                      display: 'grid',\n                      columnGap: 2,\n                      rowGap: 3,\n                      px: { md: 3, xs: 2 },\n                      gridTemplateColumns: {\n                        xs: 'repeat(1,1fr)',\n                        sm: 'repeat(1,1fr)',\n                      },\n                    }}\n                  >\n                    <Grid\n                      container\n                      alignItems='center'\n                      justifyContent='center'\n                      spacing={3}\n                    >\n                      <Grid md={2} mr={5}>\n                        <TextField\n                          value={category.name}\n                          onChange={(e) =>\n                            setCategory({ ...category, name: e.target.value })\n                          }\n                          placeholder='New Category Name'\n                        />\n                      </Grid>\n                      <Grid md={7} mr={5}>\n                        <PricesSlider\n                          valueLabelDisplay='auto'\n                          aria-label='pretto slider'\n                          value={category.value}\n                          onChange={(e, value) =>\n                            setCategory({ ...category, value })\n                          }\n                        />\n                      </Grid>\n                      <Grid md={2}>\n                        <Typography\n                          gutterBottom\n                          variant='subtitle1'\n                          sx={{\n                            textAlign: 'center',\n                            border: 'solid 1px black',\n                            borderRadius: 1,\n                            borderColor: '#DDDCE0',\n                          }}\n                          p={1}\n                        >\n                          {category.value} euro/kg\n                        </Typography>\n                      </Grid>\n                      <Grid md={1}></Grid>\n                    </Grid>\n                  </Box>\n                  <Stack direction='row' mt={2} justifyContent={'flex-end'}>\n                    <LoadingButton\n                      variant='contained'\n                      color='warning'\n                      onClick={handleAddCategory}\n                      sx={{ justifyContent: 'start' }}\n                    >\n                      Save Changes\n                    </LoadingButton>\n                  </Stack>\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"names":["PricesSlider","styled","Slider","color","height","border","width","backgroundColor","boxShadow","display","lineHeight","fontSize","background","padding","borderRadius","transformOrigin","transform","TransporterPrices","smUp","useResponsive","enqueueSnackbar","useSnackbar","category","setCategory","useState","name","value","editingCategory","setEditingCategory","editingValue","setEditingValue","editingName","setEditingName","displayAddCategory","setDisplayAddCategory","categories","useSelector","state","useEffect","dispatch","getTransporterCategories","_jsx","Page","title","children","Container","maxWidth","_jsxs","Card","CardHeader","sx","position","top","zIndex","titleTypographyProps","Grid","container","alignItems","justifyContent","py","pr","md","xs","item","Stack","mb","mx","Typography","variant","fontWeight","Divider","Box","columnGap","rowGap","px","gridTemplateColumns","sm","map","index","spacing","TextField","onChange","e","handleNameChange","target","gutterBottom","onClick","valueLabelDisplay","handleSliderChange","textAlign","borderColor","p","IconButton","async","categoryId","_id","deleteTransporterCategory","error","console","log","handleDeleteCategory","Iconify","icon","_categories$index","updatedCategory","updateTransporterCategory","handleUpdateCategory","direction","my","mr","_Fragment","_objectSpread","placeholder","mt","LoadingButton","addTransporterCategory","alert"],"sourceRoot":""}