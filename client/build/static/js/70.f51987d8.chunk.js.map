{"version":3,"file":"static/js/70.f51987d8.chunk.js","mappings":"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","sources":["sections/auth/verify-code/VerifyCodeForm.js","sections/auth/SignUpForm.js","pages/auth/SignUpPage.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { OutlinedInput, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n// routes\nimport { PATH_AUTH, PATH_DASHBOARD } from '../../../routes/paths';\nimport axios from '../../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodeForm({\n  phone,\n  justifyButton = 'center',\n  buttonStyle,\n}) {\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const isParameter = pathname.includes('parameter');\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { registerUser, userInfo, updateUser } = useAuth();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const {\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const values = watch();\n\n  useEffect(() => {\n    document.addEventListener('paste', handlePasteClipboard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // const onSubmit = async (data) => {\n  //   try {\n  //     const response = await window.confirmationResult.confirm(\n  //       Object.values(data).join('')\n  //     );\n\n  //     if (response.user) {\n  //       navigate(PATH_AUTH.coordinate);\n  //       enqueueSnackbar('Verify success!');\n  //     }\n  //   } catch (error) {}\n  // };\n\n  const handlePasteClipboard = (event) => {\n    let data = event?.clipboardData?.getData('Text') || '';\n\n    data = data.split('');\n\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\n      node.value = data[index];\n      const fieldIndex = `code${index + 1}`;\n      setValue(fieldIndex, data[index]);\n    });\n  };\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n    const fieldIndex = name.replace('code', '');\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    if (value.length >= maxLength) {\n      if (fieldIntIndex < 6) {\n        const nextfield = document.querySelector(\n          `input[name=code${fieldIntIndex + 1}]`\n        );\n\n        if (nextfield !== null) {\n          nextfield.focus();\n        }\n      }\n    }\n\n    handleChange(event);\n  };\n\n  const onSubmit = async (data) => {\n    try {\n      if (isParameter) {\n        // const code = Object.values(data).join('');\n\n        // const response = await axios.get(\n        //   `/api/transporters/verify/+${phone}/code/${code}`\n        // );\n        // console.log(\n        //   '🚀 ~ file: VerifyCodeForm.js:113 ~ onSubmit ~ response:',\n        //   response\n        // );\n        // if (response.data.valid === true) {\n        //   await updateUser({ phone });\n        //   enqueueSnackbar('Verify success!');\n        // }\n        const updatedUser = { phone };\n        await updateUser(updatedUser);\n      } else {\n        // const code = Object.values(data).join('');\n\n        // const response = await axios.get(\n        //   `/api/transporters/verify/+${phone}/code/${code}`\n        // );\n        // console.log(\n        //   '🚀 ~ file: VerifyCodeForm.js:113 ~ onSubmit ~ response:',\n        //   response\n        // );\n\n        //\n        await registerUser(userInfo);\n        navigate(PATH_AUTH.verify);\n        // if (response.data.valid === true) {\n        //   await registerUser(userInfo);\n        //   navigate(PATH_DASHBOARD.profile);\n        //   enqueueSnackbar('Verify success!');\n        // }\n      }\n    } catch (error) {\n      console.log(\n        '🚀 ~ file: VerifyCodeForm.js:118 ~ onSubmit ~ error:',\n        error\n      );\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack direction='row' spacing={2} justifyContent='center'>\n        {Object.keys(values).map((name, index) => (\n          <Controller\n            key={name}\n            name={`code${index + 1}`}\n            control={control}\n            render={({ field }) => (\n              <OutlinedInput\n                {...field}\n                id='field-code'\n                autoFocus={index === 0}\n                placeholder='-'\n                onChange={(event) =>\n                  handleChangeWithNextField(event, field.onChange)\n                }\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    p: 0,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 56 },\n                    height: { xs: 36, sm: 56 },\n                    color: 'black',\n                  },\n                }}\n              />\n            )}\n          />\n        ))}\n      </Stack>\n\n      <Stack direction='row' justifyContent={justifyButton}>\n        <LoadingButton\n          fullWidth\n          size='large'\n          type='submit'\n          variant='contained'\n          loading={isSubmitting}\n          // disabled={!isValid}\n          sx={{\n            ...buttonStyle,\n            mt: 3,\n            width: '50%',\n          }}\n          color={'warning'}\n        >\n          Vérifier\n        </LoadingButton>\n      </Stack>\n    </form>\n  );\n}\n","import { parsePhoneNumberFromString } from 'libphonenumber-js';\nimport { useSnackbar } from 'notistack';\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as Yup from 'yup';\n\n// form\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Alert,\n  Backdrop,\n  Box,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Link,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n// components\nimport Iconify from '../../components/Iconify';\nimport {\n  FormProvider,\n  RHFCountry,\n  RHFPhone,\n  RHFTextField,\n} from '../../components/hook-form';\nimport { HEADER } from '../../config';\nimport useAuth from '../../hooks/useAuth';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\nimport useResponsive from '../../hooks/useResponsive';\n\n// ----------------------------------------------------------------------\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  height: 500,\n  width: 800,\n  alignItems: 'center',\n  padding: theme.spacing(1, 0),\n  marginTop: HEADER.MAIN_DESKTOP_HEIGHT,\n  backgroundColor: '#ffffff',\n  borderRadius: 12,\n}));\n// ----------------------------------------------------------------------\nYup.addMethod(Yup.string, 'phone', function (message) {\n  return this.test('phone', message, function (value) {\n    const { path, createError } = this;\n    const phoneNumber = parsePhoneNumberFromString(value);\n    return (\n      (phoneNumber && phoneNumber.isValid()) ||\n      createError({ path, message: message || 'Numéro de téléphone invalide' })\n    );\n  });\n});\n\n// ----------------------------------------------------------------------\n\nexport default function SignUpForm({ user }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const smUp = useResponsive('up', 'sm');\n  const isMountedRef = useIsMountedRef();\n  const [, setCountryIso] = useState('');\n\n  const { addUserInfo, verifyPhoneNumber } = useAuth();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const NewUserSchema = Yup.object().shape({\n    fName: Yup.string().required('Ce champs est obligatoire'),\n    lName: Yup.string().required('Ce champs est obligatoire'),\n    phone: Yup.string()\n      .phone('Numéro de téléphone invalide')\n      .required('Ce champs est obligatoire'),\n    email: Yup.string()\n      .email('Adresse e-mail incorrecte')\n      .required('Ce champs est obligatoire'),\n    companyName: Yup.string().required('Ce champs est obligatoire'),\n    country: Yup.string().required('Ce champs est obligatoire'),\n    password: Yup.string()\n      .required('Ce champs est obligatoire')\n      .min(8, 'Password must be at least 8 characters')\n      .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\n      .matches(/[a-z]/, 'Password must contain at least one lowercase letter')\n      .matches(/\\d/, 'Password must contain at least one number')\n      .matches(\n        /[!@#$%^&*(),.?\":{}|<>]/,\n        'Password must contain at least one special character'\n      ),\n    confirmPassword: Yup.string().oneOf(\n      [Yup.ref('password'), null],\n      'Passwords must match'\n    ),\n  });\n\n  const defaultValues = {\n    fName: '',\n    lName: '',\n    phone: '',\n    email: '',\n    companyName: '',\n    country: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues,\n  });\n\n  const [phone, setPhone] = useState(null);\n\n  const {\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    setError,\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      const { phone } = data;\n      const response = await verifyPhoneNumber(data.phone);\n      console.log('🚀 ~ onSubmit ~ response:', response);\n      await addUserInfo(data);\n      handleOpen();\n      setPhone(phone);\n      enqueueSnackbar('OTP sent successfully!', { variant: 'success' });\n      // const response = await axios.get(`/api/transporters/verify/${phone}`);\n      // if (response.status === 200) {\n      //   handleOpen();\n      //   setPhone(data.phone);\n\n      //   // navigate(PATH_AUTH.verify);\n      // }\n    } catch (error) {\n      console.log('🚀 ~ file: RegisterForm.js:151 ~ onSignUp ~ error:', error);\n      //   reset();\n      if (isMountedRef.current) {\n        setError('afterSubmit', error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        {!!errors.afterSubmit && (\n          <Alert severity='error'>{errors.afterSubmit.message}</Alert>\n        )}\n\n        <Stack spacing={3} mt={2}>\n          <Grid container justifyContent={'space-between'}>\n            <Grid item md={5.8} xs={12} mb={3}>\n              <RHFTextField name='lName' placeholder={'Votre nom *'} />\n            </Grid>\n            <Grid item md={5.8} xs={12}>\n              <RHFTextField name='fName' placeholder={'Votre prénom *'} />\n            </Grid>\n          </Grid>\n\n          <Stack spacing={2}>\n            <RHFPhone\n              name='phone'\n              placeholder={'Votre numéro de téléphone *'}\n            />\n          </Stack>\n\n          <Stack>\n            <RHFTextField name='email' placeholder={'Votre adresse mail *'} />\n          </Stack>\n\n          <Grid container justifyContent={'space-between'}>\n            {user === 'transporter' && (\n              <Grid item md={5.8} xs={12}>\n                <RHFTextField\n                  name='companyName'\n                  placeholder={`Nom de l'entreprise`}\n                />\n              </Grid>\n            )}\n            <Grid item md={user === 'transporter' ? 5.8 : 12} xs={12}>\n              <Stack spacing={2}>\n                <RHFCountry\n                  name='country'\n                  placeholder='Pays'\n                  setCountryIso={setCountryIso}\n                />\n              </Stack>\n            </Grid>\n          </Grid>\n\n          <Stack>\n            <RHFTextField\n              name='password'\n              isPassword={true}\n              type={showPassword ? 'text' : 'password'}\n              placeholder={'Votre mote de passe'}\n              showPassword={showPassword}\n              showPasswordHandler={() => setShowPassword(!showPassword)}\n            />\n          </Stack>\n\n          <Stack spacing={0}>\n            <RHFTextField\n              name='confirmPassword'\n              isPassword={true}\n              type={showConfirmPassword ? 'text' : 'password'}\n              placeholder={'Confirmer votre mot de passe'}\n              showPassword={showConfirmPassword}\n              showPasswordHandler={() =>\n                setShowConfirmPassword(!showConfirmPassword)\n              }\n            />\n            <Typography\n              variant={smUp ? 'body2' : 'caption'}\n              color='text.secondary'\n              sx={{ fontWeight: 300 }}\n            >\n              Use 8 or more characters with a mix of letters, numbers and\n              symbols\n            </Typography>\n          </Stack>\n\n          <Typography\n            variant={smUp ? 'body1' : 'caption'}\n            color='text.secondary'\n          >\n            En créant un compte, vous acceptez{' '}\n            <Link component={RouterLink} to={'/'}>\n              les conditions d'utilisation{' '}\n            </Link>\n            et{' '}\n            <Link component={RouterLink} to={'/'}>\n              la politique de confidentialité{' '}\n            </Link>\n            .\n          </Typography>\n          <LoadingButton\n            type='submit'\n            loading={isSubmitting}\n            size='large'\n            variant='contained'\n            color='warning'\n            sx={{ p: 1.5, borderRadius: 0.6, fontSize: 16, fontWeight: 700 }}\n          >\n            S'INSCRIRE\n          </LoadingButton>\n\n          <Divider>\n            <Typography variant='body1' sx={{ fontWeight: 550 }}>\n              Ou se s'inscrire avec\n            </Typography>\n          </Divider>\n          <Button\n            size='large'\n            variant='outlined'\n            sx={{ p: 1.5, borderRadius: 0.6, fontSize: 16, fontWeight: 700 }}\n          >\n            Google\n          </Button>\n          <Button\n            size='large'\n            variant='outlined'\n            sx={{ p: 1.5, borderRadius: 0.6, fontSize: 16, fontWeight: 700 }}\n          >\n            Facebook\n          </Button>\n        </Stack>\n      </FormProvider>\n\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <RootStyle>\n          <Container>\n            <Box sx={{ maxWidth: 600, mx: 'auto' }}>\n              <Button\n                size='small'\n                onClick={() => handleClose()}\n                startIcon={\n                  <Iconify\n                    icon={'eva:arrow-ios-back-fill'}\n                    width={20}\n                    height={20}\n                  />\n                }\n                sx={{ mb: 3 }}\n              >\n                Précédant\n              </Button>\n\n              <Stack direction='row' justifyContent='center'>\n                <Iconify\n                  height={50}\n                  width={50}\n                  icon={'solar:lock-outline'}\n                  color={'#000000'}\n                />\n              </Stack>\n\n              <Typography\n                variant='h3'\n                paragraph\n                sx={{ color: 'text.primary', textAlign: 'center' }}\n              >\n                Nous avons envoyé un code{' '}\n              </Typography>\n              <Typography\n                variant='body2'\n                sx={{ color: 'text.secondary', textAlign: 'center' }}\n              >\n                {`Enter the code that we have sent to ${phone}`}\n              </Typography>\n\n              <Box sx={{ mt: 5, mb: 1 }}>\n                <VerifyCodeForm phone={phone} />\n              </Box>\n\n              <Stack direction='row' justifyContent='center'>\n                <Link\n                  sx={{ alignContent: 'center' }}\n                  variant='body2'\n                  underline='none'\n                  onClick={() => {}}\n                >\n                  Renvoyer le code\n                </Link>\n              </Stack>\n            </Box>\n          </Container>\n        </RootStyle>\n      </Backdrop>\n    </>\n  );\n}\n","import { m } from 'framer-motion';\nimport { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Link,\n  Stack,\n  styled,\n  Typography,\n} from '@mui/material';\n// components\nimport { MotionContainer, varFade } from '../../components/animate';\nimport Page from '../../components/Page';\n// sections\nimport SignUpForm from '../../sections/auth/SignUpForm';\nimport AuthCarousel from '../../sections/auth/AuthCarousel';\nimport { PATH_AUTH } from '../../routes/paths';\nimport useResponsive from '../../hooks/useResponsive';\n\n//----------------------------------------------------------------------\nconst RootStyle = styled(m.div)(({ theme }) => ({\n  position: 'relative',\n  top: 0,\n  left: 0,\n  backgroundColor: 'transparent',\n  width: '100%',\n  height: '180vh',\n  background:\n    'linear-gradient(180deg, #033B3A 0%, #033938 0%, #02302F 19.03%, #000000 100%);',\n  [theme.breakpoints.up('md')]: {\n    width: '100%',\n    height: '158vh',\n    display: 'flex',\n    // position: 'fixed',\n    alignItems: 'center',\n  },\n}));\n\nconst HeroOverlayStyle = styled(m.img)({\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute',\n});\n\nconst ContentStyle = styled(Card)(({ theme }) => ({\n  width: '92%',\n  maxHeight: '100%',\n  backgroundColor: '#ffffff',\n  position: 'absolute',\n  top: 80,\n  [theme.breakpoints.up('md')]: {\n    width: '70%',\n    maxHeight: '88%',\n    top: 140,\n  },\n}));\n\n//----------------------------------------------------------------------\n\nexport default function SignUpPage() {\n  const [user, setUser] = useState('client');\n\n  const smUp = useResponsive('up', 'sm');\n\n  useEffect(() => {\n    console.log('User selection changed to:', user);\n  }, [user]);\n\n  const handleClick = (selectedUser) => {\n    setUser(selectedUser);\n  };\n  return (\n    <Page title='Créer un nouveau compte'>\n      <MotionContainer>\n        <RootStyle>\n          <HeroOverlayStyle\n            alt='overlay'\n            src='../mozaic_bg.png'\n            variants={varFade().in}\n          />\n          <Container maxWidth={'xl'}>\n            <ContentStyle>\n              <Grid\n                container\n                direction={'row'}\n                justifyContent={{ md: 'space-around', xs: 'flex-start' }}\n              >\n                {smUp && (\n                  <Grid item md={7} pl={4} py={5}>\n                    <AuthCarousel />\n                  </Grid>\n                )}\n                <Grid item md={5} xs={12} mt={{ md: 3, xs: 0 }}>\n                  <CardContent>\n                    <Stack direction={'row'}>\n                      <Box sx={{ flexGrow: 1 }}>\n                        <Typography\n                          variant='h3'\n                          sx={{ fontWeight: 500, textAlign: 'start' }}\n                        >\n                          Créer un nouveau compte\n                        </Typography>\n                        <Typography\n                          variant={'body2'}\n                          color='text.secondary'\n                          sx={{\n                            textAlign: 'start',\n                          }}\n                        >\n                          Vous avez déjà un compte ?{' '}\n                          <Link component={RouterLink} to={PATH_AUTH.login}>\n                            Se connecter ici\n                          </Link>\n                        </Typography>\n                      </Box>\n                    </Stack>\n\n                    <Stack\n                      direction={'row'}\n                      sx={{\n                        width: '100%',\n                        backgroundColor: '#EDEEEF',\n                        borderRadius: 1.2,\n                        my: { md: 5, xs: 3 },\n                        justifyContent: 'center',\n                        p: 0.5,\n                      }}\n                      spacing={1}\n                    >\n                      <Button\n                        sx={{\n                          px: { md: 12, xs: 8 },\n                          py: 2,\n                          backgroundColor: user === 'client' ? 'white' : 'none',\n                        }}\n                        onClick={() => handleClick('client')}\n                      >\n                        Client\n                      </Button>\n                      <Button\n                        size='large'\n                        sx={{\n                          px: { md: 12, xs: 8 },\n                          backgroundColor:\n                            user === 'transporter' ? 'white' : 'none',\n                        }}\n                        onClick={() => handleClick('transporter')}\n                      >\n                        Transporteur\n                      </Button>\n                    </Stack>\n\n                    <SignUpForm user={user} />\n                  </CardContent>\n                </Grid>\n              </Grid>\n            </ContentStyle>\n          </Container>\n        </RootStyle>\n        {/* <Box sx={{ height: { md: '20vh' } }} /> */}\n      </MotionContainer>\n    </Page>\n  );\n}\n"],"names":["VerifyCodeForm","_ref","phone","justifyButton","buttonStyle","navigate","useNavigate","pathname","useLocation","isParameter","includes","enqueueSnackbar","useSnackbar","registerUser","userInfo","updateUser","useAuth","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","useForm","mode","resolver","yupResolver","defaultValues","values","useEffect","document","addEventListener","handlePasteClipboard","event","_event$clipboardData","data","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","concat","_jsxs","onSubmit","async","updatedUser","PATH_AUTH","verify","error","console","log","children","_jsx","Stack","direction","spacing","justifyContent","Object","keys","map","name","Controller","render","_ref2","field","OutlinedInput","_objectSpread","id","autoFocus","placeholder","onChange","handleChangeWithNextField","handleChange","maxLength","target","replace","fieldIntIndex","Number","length","nextfield","querySelector","focus","inputProps","sx","p","textAlign","width","xs","sm","height","color","LoadingButton","fullWidth","size","type","variant","loading","mt","RootStyle","styled","theme","display","alignItems","padding","marginTop","HEADER","MAIN_DESKTOP_HEIGHT","backgroundColor","borderRadius","SignUpForm","user","smUp","useResponsive","isMountedRef","useIsMountedRef","setCountryIso","useState","addUserInfo","verifyPhoneNumber","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","open","setOpen","NewUserSchema","fName","lName","email","companyName","country","password","min","matches","confirmPassword","oneOf","methods","setPhone","errors","setError","_Fragment","FormProvider","response","current","afterSubmit","Alert","severity","message","Grid","container","item","md","mb","RHFTextField","RHFPhone","RHFCountry","isPassword","showPasswordHandler","Typography","fontWeight","Link","component","RouterLink","to","fontSize","Divider","Button","Backdrop","zIndex","drawer","Container","Box","maxWidth","mx","onClick","startIcon","Iconify","icon","paragraph","alignContent","underline","this","test","path","createError","phoneNumber","parsePhoneNumberFromString","m","div","position","top","left","background","breakpoints","up","HeroOverlayStyle","img","objectFit","ContentStyle","Card","maxHeight","SignUpPage","setUser","handleClick","selectedUser","Page","title","MotionContainer","alt","src","variants","varFade","in","pl","py","AuthCarousel","CardContent","flexGrow","login","my","px"],"sourceRoot":""}