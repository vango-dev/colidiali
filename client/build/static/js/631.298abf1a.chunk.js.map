{"version":3,"file":"static/js/631.298abf1a.chunk.js","mappings":"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","sources":["sections/transporters/TransporterSearchForm.js","../node_modules/kdbush/index.js","../node_modules/supercluster/index.js","sections/transporters/TransportersList.js","pages/transporters/TransportersMapPage.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\n// hooks\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\nimport useResponsive from '../../hooks/useResponsive';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Grid, IconButton, Paper, Stack } from '@mui/material';\n// redux\nimport { getDepartures } from '../../redux/slices/departure';\nimport { useDispatch } from '../../redux/store.js';\n// components\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Iconify from '../../components/Iconify';\nimport {\n  FormProvider,\n  RHFDateSearch,\n  RHFMapSearch,\n} from '../../components/hook-form';\n\nexport default function TransporterSearchForm({\n  withPaper = true,\n  searchParams,\n}) {\n  console.log('🚀 ~ searchParams:', searchParams);\n  const isDesktop = useResponsive('up', 'md');\n  const isMountedRef = useIsMountedRef();\n  const { pathname } = useLocation();\n\n  const [openSearchFields, setOpenSearchFields] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isHome = pathname === '/';\n\n  const TripSchema = Yup.object().shape({\n    departure: Yup.string().required('* Ce champ est obligatoire'),\n    destination: Yup.string().nullable(),\n    date: Yup.date().nullable(),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      departure: searchParams?.get('departure'),\n      destination: searchParams?.get('destination') || undefined,\n      date: searchParams && Date(searchParams.get('date')),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [searchParams]\n  );\n\n  const methods = useForm({ resolver: yupResolver(TripSchema), defaultValues });\n\n  const {\n    handleSubmit,\n    reset,\n    setError,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  useEffect(() => {\n    if (searchParams) {\n      reset(searchParams);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  const onSubmit = async (data, activePage) => {\n    console.log('🚀 ~ onSubmit ~ data:', data);\n    try {\n      dispatch(getDepartures(data));\n\n      navigate(\n        `/transporters/map?departure=${data?.departure}&${\n          data && data.destination && 'destination=' + data.destination\n        }&${data && data.date && 'date=' + data.date}`\n      );\n      setOpenSearchFields(!openSearchFields);\n    } catch (error) {\n      console.error(error);\n      reset();\n      if (isMountedRef.current) {\n        setError('afterSubmit', error);\n        console.log('🚀 ~ onSubmit ~ error:', error);\n      }\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      {!!errors.afterSubmit && (\n        <Alert severity='error'>{errors.afterSubmit.message}</Alert>\n      )}\n\n      {withPaper ? (\n        isHome ? (\n          <Stack\n            direction={{ sm: 'column', md: 'row' }}\n            sx={{\n              backgroundColor: { md: 'white', sm: 'none' },\n              p: 1,\n              borderRadius: 2,\n            }}\n          >\n            <Paper\n              sx={{\n                p: '2px 4px',\n                display: 'flex',\n                marginBottom: { xs: 5, md: 0 },\n                width: { md: 400, xs: '90%' },\n              }}\n            >\n              <RHFMapSearch\n                borderWidth={2}\n                name='departure'\n                label='Point de départ'\n              />\n            </Paper>\n            {isDesktop && (\n              <IconButton sx={{ p: '10px' }}>\n                <Iconify icon='heroicons:arrows-right-left-20-solid' />\n              </IconButton>\n            )}\n            <Paper\n              sx={{\n                p: '2px 4px',\n                display: 'flex',\n                marginBottom: { xs: 5, md: 0 },\n                width: { md: 400, xs: '90%' },\n              }}\n            >\n              <RHFMapSearch name='destination' label='Destination' />\n            </Paper>\n\n            <Paper\n              sx={{\n                p: '2px 4px',\n                display: 'flex',\n                mx: { sm: 0, md: 1 },\n                marginBottom: { xs: 5, md: 0 },\n                width: { md: 400, xs: '90%' },\n              }}\n            >\n              <RHFDateSearch\n                name='date'\n                label='Date de départ'\n                variant={'body2'}\n              />\n\n              <LoadingButton\n                type='submit'\n                loading={isSubmitting}\n                sx={{\n                  background: 'black',\n                  borderRadius: 0.5,\n                  width: { md: '25%' },\n                  height: { md: '90%', xs: '50%' },\n                  alignSelf: 'center',\n                }}\n              >\n                <Iconify\n                  icon='fontisto:search'\n                  color={'white'}\n                  width={25}\n                  height={25}\n                />\n              </LoadingButton>\n            </Paper>\n          </Stack>\n        ) : (\n          <Stack\n            direction={{ xs: 'column', md: 'row' }}\n            sx={{\n              backgroundColor: { md: 'white', xs: 'primary.main' },\n              p: { md: 1, xs: 3 },\n              borderRadius: { md: 2, xs: 0 },\n              mt: { md: 0, xs: '5.5vh' },\n              width: { md: '42vw', xs: '100vw' },\n            }}\n            gap={2}\n          >\n            <Paper\n              sx={{\n                p: { md: '2px 4px', xs: 0 },\n                display: 'flex',\n                width: { md: 400, xs: '100%' },\n              }}\n            >\n              <RHFMapSearch name='departure' label='Point de départ' />\n            </Paper>\n            {isDesktop && (\n              <IconButton sx={{ p: '10px' }}>\n                <Iconify icon='heroicons:arrows-right-left-20-solid' />\n              </IconButton>\n            )}\n            <Paper\n              sx={{\n                p: { md: '2px 4px', xs: 0 },\n                display: 'flex',\n                width: { md: 400, xs: '100%' },\n              }}\n            >\n              <RHFMapSearch name='destination' label='Destination' />\n            </Paper>\n\n            <Paper\n              sx={{\n                p: { md: '2px 4px', xs: 0 },\n                display: 'flex',\n                mx: { sm: 0, md: 1 },\n                width: { md: 400, xs: '100%' },\n                mb: 0,\n              }}\n            >\n              <RHFDateSearch\n                name='date'\n                label='Date de départ'\n                variant={'body2'}\n              />\n\n              <LoadingButton\n                type='submit'\n                loading={isSubmitting}\n                sx={{\n                  background: 'black',\n                  borderRadius: 0.5,\n                  width: { md: '25%' },\n                  height: { md: '90%', xs: '50%' },\n                  alignSelf: 'center',\n                }}\n              >\n                <Iconify\n                  icon='fontisto:search'\n                  color={'white'}\n                  width={25}\n                  height={25}\n                />\n              </LoadingButton>\n            </Paper>\n          </Stack>\n        )\n      ) : (\n        <Stack\n          direction={'column'}\n          sx={{\n            backgroundColor: { md: 'white', sm: 'none' },\n            p: 1.1,\n            borderRadius: 1,\n            marginTop: 12,\n            marginBottom: 2,\n            marginLeft: 'auto',\n            width: '92%',\n            position: 'relative',\n          }}\n        >\n          <Grid container spacing={2}>\n            {!openSearchFields ? (\n              <>\n                <Grid item md={11}>\n                  <Grid container>\n                    <Grid item md={12}>\n                      <RHFMapSearch\n                        name='departure'\n                        label='Point de départ'\n                        variant='caption'\n                        height={17}\n                        width={17}\n                        onFocus={() => setOpenSearchFields(true)}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </>\n            ) : (\n              <>\n                <Grid item md={11}>\n                  <Grid container>\n                    <Grid item md={12}>\n                      <RHFMapSearch\n                        name='departure'\n                        label='Point de départ'\n                        variant='caption'\n                        height={17}\n                        width={17}\n                      />\n                    </Grid>\n                    <Grid item md={12}>\n                      <RHFMapSearch\n                        name='destination'\n                        label='Destination'\n                        variant='caption'\n                        height={17}\n                        width={17}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item md={1} sx={{ alignSelf: 'center' }}>\n                  <IconButton sx={{ p: '2px', color: 'black' }}>\n                    <Iconify\n                      icon='humbleicons:arrows-up-down'\n                      height={25}\n                      width={25}\n                      sx={{ color: 'black' }}\n                    />\n                  </IconButton>\n                </Grid>\n                <Grid item md={11}>\n                  <RHFDateSearch\n                    name='date'\n                    label='Date de départ'\n                    variant='caption'\n                    height={17}\n                    width={17}\n                  />\n                </Grid>\n                <Grid\n                  md={1}\n                  container\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    alignItems: 'center',\n                    mt: 2,\n                  }}\n                >\n                  <IconButton\n                    type='submit'\n                    sx={{\n                      background: 'black',\n                      borderRadius: 0.5,\n                      ml: 1,\n                    }}\n                  >\n                    <Iconify\n                      icon='fontisto:search'\n                      color={'white'}\n                      width={20}\n                      height={20}\n                    />\n                  </IconButton>\n                </Grid>\n              </>\n            )}\n          </Grid>\n        </Stack>\n      )}\n    </FormProvider>\n  );\n}\n","\nconst ARRAY_TYPES = [\n    Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array\n];\n\n/** @typedef {Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor} TypedArrayConstructor */\n\nconst VERSION = 1; // serialized format version\nconst HEADER_SIZE = 8;\n\nexport default class KDBush {\n\n    /**\n     * Creates an index from raw `ArrayBuffer` data.\n     * @param {ArrayBuffer} data\n     */\n    static from(data) {\n        if (!(data instanceof ArrayBuffer)) {\n            throw new Error('Data must be an instance of ArrayBuffer.');\n        }\n        const [magic, versionAndType] = new Uint8Array(data, 0, 2);\n        if (magic !== 0xdb) {\n            throw new Error('Data does not appear to be in a KDBush format.');\n        }\n        const version = versionAndType >> 4;\n        if (version !== VERSION) {\n            throw new Error(`Got v${version} data when expected v${VERSION}.`);\n        }\n        const ArrayType = ARRAY_TYPES[versionAndType & 0x0f];\n        if (!ArrayType) {\n            throw new Error('Unrecognized array type.');\n        }\n        const [nodeSize] = new Uint16Array(data, 2, 1);\n        const [numItems] = new Uint32Array(data, 4, 1);\n\n        return new KDBush(numItems, nodeSize, ArrayType, data);\n    }\n\n    /**\n     * Creates an index that will hold a given number of items.\n     * @param {number} numItems\n     * @param {number} [nodeSize=64] Size of the KD-tree node (64 by default).\n     * @param {TypedArrayConstructor} [ArrayType=Float64Array] The array type used for coordinates storage (`Float64Array` by default).\n     * @param {ArrayBuffer} [data] (For internal use only)\n     */\n    constructor(numItems, nodeSize = 64, ArrayType = Float64Array, data) {\n        if (isNaN(numItems) || numItems < 0) throw new Error(`Unpexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n        this.ArrayType = ArrayType;\n        this.IndexArrayType = numItems < 65536 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const coordsByteSize = numItems * 2 * this.ArrayType.BYTES_PER_ELEMENT;\n        const idsByteSize = numItems * this.IndexArrayType.BYTES_PER_ELEMENT;\n        const padCoords = (8 - idsByteSize % 8) % 8;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        if (data && (data instanceof ArrayBuffer)) { // reconstruct an index from a buffer\n            this.data = data;\n            this.ids = new this.IndexArrayType(this.data, HEADER_SIZE, numItems);\n            this.coords = new this.ArrayType(this.data, HEADER_SIZE + idsByteSize + padCoords, numItems * 2);\n            this._pos = numItems * 2;\n            this._finished = true;\n        } else { // initialize a new index\n            this.data = new ArrayBuffer(HEADER_SIZE + coordsByteSize + idsByteSize + padCoords);\n            this.ids = new this.IndexArrayType(this.data, HEADER_SIZE, numItems);\n            this.coords = new this.ArrayType(this.data, HEADER_SIZE + idsByteSize + padCoords, numItems * 2);\n            this._pos = 0;\n            this._finished = false;\n\n            // set header\n            new Uint8Array(this.data, 0, 2).set([0xdb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n    }\n\n    /**\n     * Add a point to the index.\n     * @param {number} x\n     * @param {number} y\n     * @returns {number} An incremental index associated with the added item (starting from `0`).\n     */\n    add(x, y) {\n        const index = this._pos >> 1;\n        this.ids[index] = index;\n        this.coords[this._pos++] = x;\n        this.coords[this._pos++] = y;\n        return index;\n    }\n\n    /**\n     * Perform indexing of the added points.\n     */\n    finish() {\n        const numAdded = this._pos >> 1;\n        if (numAdded !== this.numItems) {\n            throw new Error(`Added ${numAdded} items when expected ${this.numItems}.`);\n        }\n        // kd-sort both arrays for efficient search\n        sort(this.ids, this.coords, this.nodeSize, 0, this.numItems - 1, 0);\n\n        this._finished = true;\n        return this;\n    }\n\n    /**\n     * Search the index for items within a given bounding box.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @returns {number[]} An array of indices correponding to the found items.\n     */\n    range(minX, minY, maxX, maxY) {\n        if (!this._finished) throw new Error('Data not yet indexed - call index.finish().');\n\n        const {ids, coords, nodeSize} = this;\n        const stack = [0, ids.length - 1, 0];\n        const result = [];\n\n        // recursively search for items in range in the kd-sorted arrays\n        while (stack.length) {\n            const axis = stack.pop() || 0;\n            const right = stack.pop() || 0;\n            const left = stack.pop() || 0;\n\n            // if we reached \"tree node\", search linearly\n            if (right - left <= nodeSize) {\n                for (let i = left; i <= right; i++) {\n                    const x = coords[2 * i];\n                    const y = coords[2 * i + 1];\n                    if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n                }\n                continue;\n            }\n\n            // otherwise find the middle index\n            const m = (left + right) >> 1;\n\n            // include the middle item if it's in range\n            const x = coords[2 * m];\n            const y = coords[2 * m + 1];\n            if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n            // queue search in halves that intersect the query\n            if (axis === 0 ? minX <= x : minY <= y) {\n                stack.push(left);\n                stack.push(m - 1);\n                stack.push(1 - axis);\n            }\n            if (axis === 0 ? maxX >= x : maxY >= y) {\n                stack.push(m + 1);\n                stack.push(right);\n                stack.push(1 - axis);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Search the index for items within a given radius.\n     * @param {number} qx\n     * @param {number} qy\n     * @param {number} r Query radius.\n     * @returns {number[]} An array of indices correponding to the found items.\n     */\n    within(qx, qy, r) {\n        if (!this._finished) throw new Error('Data not yet indexed - call index.finish().');\n\n        const {ids, coords, nodeSize} = this;\n        const stack = [0, ids.length - 1, 0];\n        const result = [];\n        const r2 = r * r;\n\n        // recursively search for items within radius in the kd-sorted arrays\n        while (stack.length) {\n            const axis = stack.pop() || 0;\n            const right = stack.pop() || 0;\n            const left = stack.pop() || 0;\n\n            // if we reached \"tree node\", search linearly\n            if (right - left <= nodeSize) {\n                for (let i = left; i <= right; i++) {\n                    if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n                }\n                continue;\n            }\n\n            // otherwise find the middle index\n            const m = (left + right) >> 1;\n\n            // include the middle item if it's in range\n            const x = coords[2 * m];\n            const y = coords[2 * m + 1];\n            if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n            // queue search in halves that intersect the query\n            if (axis === 0 ? qx - r <= x : qy - r <= y) {\n                stack.push(left);\n                stack.push(m - 1);\n                stack.push(1 - axis);\n            }\n            if (axis === 0 ? qx + r >= x : qy + r >= y) {\n                stack.push(m + 1);\n                stack.push(right);\n                stack.push(1 - axis);\n            }\n        }\n\n        return result;\n    }\n}\n\n/**\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} nodeSize\n * @param {number} left\n * @param {number} right\n * @param {number} axis\n */\nfunction sort(ids, coords, nodeSize, left, right, axis) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1; // middle index\n\n    // sort ids and coords around the middle index so that the halves lie\n    // either left/right or top/bottom correspondingly (taking turns)\n    select(ids, coords, m, left, right, axis);\n\n    // recursively kd-sort first half and second half on the opposite axis\n    sort(ids, coords, nodeSize, left, m - 1, 1 - axis);\n    sort(ids, coords, nodeSize, m + 1, right, 1 - axis);\n}\n\n/**\n * Custom Floyd-Rivest selection algorithm: sort ids and coords so that\n * [left..k-1] items are smaller than k-th item (on either x or y axis)\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} k\n * @param {number} left\n * @param {number} right\n * @param {number} axis\n */\nfunction select(ids, coords, k, left, right, axis) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, axis);\n        }\n\n        const t = coords[2 * k + axis];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + axis] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + axis] < t) i++;\n            while (coords[2 * j + axis] > t) j--;\n        }\n\n        if (coords[2 * left + axis] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @param {Uint16Array | Uint32Array} ids\n * @param {InstanceType<TypedArrayConstructor>} coords\n * @param {number} i\n * @param {number} j\n */\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\n/**\n * @param {InstanceType<TypedArrayConstructor>} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @param {number} ax\n * @param {number} ay\n * @param {number} bx\n * @param {number} by\n */\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nconst OFFSET_ZOOM = 2;\nconst OFFSET_ID = 3;\nconst OFFSET_PARENT = 4;\nconst OFFSET_NUM = 5;\nconst OFFSET_PROP = 6;\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = Object.assign(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n        this.stride = this.options.reduce ? 7 : 6;\n        this.clusterProps = [];\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        const data = [];\n\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            if (!p.geometry) continue;\n\n            const [lng, lat] = p.geometry.coordinates;\n            const x = fround(lngX(lng));\n            const y = fround(latY(lat));\n            // store internal point/cluster data in flat numeric arrays for performance\n            data.push(\n                x, y, // projected point coordinates\n                Infinity, // the last zoom the point was processed at\n                i, // index of the source feature in the original input array\n                -1, // parent cluster id\n                1 // number of points in a cluster\n            );\n            if (this.options.reduce) data.push(0); // noop\n        }\n        let tree = this.trees[maxZoom + 1] = this._createTree(data);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            tree = this.trees[z] = this._createTree(this._cluster(tree, z));\n\n            if (log) console.log('z%d: %d clusters in %dms', z, tree.numItems, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const data = tree.data;\n        const clusters = [];\n        for (const id of ids) {\n            const k = this.stride * id;\n            clusters.push(data[k + OFFSET_NUM] > 1 ? getClusterJSON(data, k, this.clusterProps) : this.points[data[k + OFFSET_ID]]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const tree = this.trees[originZoom];\n        if (!tree) throw new Error(errorMsg);\n\n        const data = tree.data;\n        if (originId * this.stride >= data.length) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const x = data[originId * this.stride];\n        const y = data[originId * this.stride + 1];\n        const ids = tree.within(x, y, r);\n        const children = [];\n        for (const id of ids) {\n            const k = id * this.stride;\n            if (data[k + OFFSET_PARENT] === clusterId) {\n                children.push(data[k + OFFSET_NUM] > 1 ? getClusterJSON(data, k, this.clusterProps) : this.points[data[k + OFFSET_ID]]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.data, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.data, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.data, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _createTree(data) {\n        const tree = new KDBush(data.length / this.stride | 0, this.options.nodeSize, Float32Array);\n        for (let i = 0; i < data.length; i += this.stride) tree.add(data[i], data[i + 1]);\n        tree.finish();\n        tree.data = data;\n        return tree;\n    }\n\n    _addTileFeatures(ids, data, x, y, z2, tile) {\n        for (const i of ids) {\n            const k = i * this.stride;\n            const isCluster = data[k + OFFSET_NUM] > 1;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(data, k, this.clusterProps);\n                px = data[k];\n                py = data[k + 1];\n            } else {\n                const p = this.points[data[k + OFFSET_ID]];\n                tags = p.properties;\n                const [lng, lat] = p.geometry.coordinates;\n                px = lngX(lng);\n                py = latY(lat);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster || this.options.generateId) {\n                // optionally generate id for points\n                id = data[k + OFFSET_ID];\n            } else {\n                // keep id if already assigned\n                id = this.points[data[k + OFFSET_ID]].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(Math.floor(+z), this.options.maxZoom + 1));\n    }\n\n    _cluster(tree, zoom) {\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n        const data = tree.data;\n        const nextData = [];\n        const stride = this.stride;\n\n        // loop through each point\n        for (let i = 0; i < data.length; i += stride) {\n            // if we've already visited the point at this zoom level, skip it\n            if (data[i + OFFSET_ZOOM] <= zoom) continue;\n            data[i + OFFSET_ZOOM] = zoom;\n\n            // find all nearby points\n            const x = data[i];\n            const y = data[i + 1];\n            const neighborIds = tree.within(data[i], data[i + 1], r);\n\n            const numPointsOrigin = data[i + OFFSET_NUM];\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const k = neighborId * stride;\n                // filter out neighbors that are already processed\n                if (data[k + OFFSET_ZOOM] > zoom) numPoints += data[k + OFFSET_NUM];\n            }\n\n            // if there were neighbors to merge, and there are enough points to form a cluster\n            if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n                let wx = x * numPointsOrigin;\n                let wy = y * numPointsOrigin;\n\n                let clusterProperties;\n                let clusterPropIndex = -1;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = ((i / stride | 0) << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const k = neighborId * stride;\n\n                    if (data[k + OFFSET_ZOOM] <= zoom) continue;\n                    data[k + OFFSET_ZOOM] = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = data[k + OFFSET_NUM];\n                    wx += data[k] * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += data[k + 1] * numPoints2;\n\n                    data[k + OFFSET_PARENT] = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) {\n                            clusterProperties = this._map(data, i, true);\n                            clusterPropIndex = this.clusterProps.length;\n                            this.clusterProps.push(clusterProperties);\n                        }\n                        reduce(clusterProperties, this._map(data, k));\n                    }\n                }\n\n                data[i + OFFSET_PARENT] = id;\n                nextData.push(wx / numPoints, wy / numPoints, Infinity, id, -1, numPoints);\n                if (reduce) nextData.push(clusterPropIndex);\n\n            } else { // left points as unclustered\n                for (let j = 0; j < stride; j++) nextData.push(data[i + j]);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const k = neighborId * stride;\n                        if (data[k + OFFSET_ZOOM] <= zoom) continue;\n                        data[k + OFFSET_ZOOM] = zoom;\n                        for (let j = 0; j < stride; j++) nextData.push(data[k + j]);\n                    }\n                }\n            }\n        }\n\n        return nextData;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(data, i, clone) {\n        if (data[i + OFFSET_NUM] > 1) {\n            const props = this.clusterProps[data[i + OFFSET_PROP]];\n            return clone ? Object.assign({}, props) : props;\n        }\n        const original = this.points[data[i + OFFSET_ID]].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? Object.assign({}, result) : result;\n    }\n}\n\nfunction getClusterJSON(data, i, clusterProps) {\n    return {\n        type: 'Feature',\n        id: data[i + OFFSET_ID],\n        properties: getClusterProperties(data, i, clusterProps),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(data[i]), yLat(data[i + 1])]\n        }\n    };\n}\n\nfunction getClusterProperties(data, i, clusterProps) {\n    const count = data[i + OFFSET_NUM];\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    const propIndex = data[i + OFFSET_PROP];\n    const properties = propIndex === -1 ? {} : Object.assign({}, clusterProps[propIndex]);\n    return Object.assign(properties, {\n        cluster: true,\n        cluster_id: data[i + OFFSET_ID],\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n","import { m } from 'framer-motion';\nimport PropTypes from 'prop-types';\n// @mui\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Paper,\n  Rating,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n// components\nimport { useEffect, useState } from 'react';\nimport Iconify from '../../components/Iconify';\nimport Image from '../../components/Image';\nimport SocialsButton from '../../components/SocialsButton';\nimport { MotionContainer } from '../../components/animate';\nimport useResponsive from '../../hooks/useResponsive';\nimport { useSelector } from '../../redux/store';\nimport { fShortenNumber } from '../../utils/formatNumber';\nimport { fDate } from '../../utils/formatTime';\nimport TransporterDetails from './TransporterDetails';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(m.div)(({ theme }) => ({\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  left: 0,\n  top: '58.5vh',\n  zIndex: 3,\n  width: '100%',\n  height: '100vh',\n  [theme.breakpoints.up('md')]: {\n    top: 0,\n    position: 'relative',\n    height: '76vh',\n    width: '92%',\n    marginLeft: 'auto',\n\n    // alignItems: 'center',\n    // background: 'linear-gradient(to bottom, #033B3A, #000000)',\n  },\n}));\n\nconst RootStyle2 = styled(m.div)(({ theme }) => ({\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  top: '7vh',\n  left: 0,\n  zIndex: 4,\n  width: '100%',\n\n  [theme.breakpoints.up('md')]: {\n    width: '2%',\n    height: '79vh',\n    marginLeft: 'auto',\n    top: '15%',\n    left: '35%',\n  },\n}));\n\nconst ContentStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  height: '40%',\n  backgroundColor: '#FFFFFF',\n  backgroundImage: 'url(/assets/mozaic_transporters_bg.png)',\n  overflow: 'auto',\n  [theme.breakpoints.up('md')]: {\n    height: '100%',\n  },\n  [theme.breakpoints.down('sm')]: {\n    borderRadius: 20,\n    paddingBottom: 10,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function TransportersList({\n  onSelectTransporter,\n  selectedTransporterFromMap,\n  onIconClick,\n}) {\n  const isDesktop = useResponsive('up', 'md');\n\n  const { futurDepartures } = useSelector((state) => state.departure);\n\n  const [selectedTransporter, setSelectedTransporter] = useState('');\n  const [selectedDeparture, setSelectedDeparture] = useState('');\n\n  const [openCard, setOpenCard] = useState(false);\n\n  const openCardHandler = (departure) => {\n    if (selectedDeparture && departure._id === selectedDeparture._id) {\n      setOpenCard(!openCard);\n    } else {\n      setSelectedDeparture(departure);\n      setOpenCard(true);\n      // dispatch(setTransporter(transporter));\n      if (departure) {\n        onSelectTransporter(departure);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setSelectedTransporter(selectedTransporterFromMap);\n    if (selectedTransporterFromMap) {\n      openCardHandler(selectedTransporterFromMap);\n    }\n  }, [selectedTransporterFromMap]);\n\n  const [openCardStates, setOpenCardStates] = useState({});\n\n  const handleToggleOpenCard = (index) => {\n    setOpenCardStates((prevState) => ({\n      ...prevState,\n      [index]: !prevState[index],\n    }));\n  };\n\n  return (\n    <MotionContainer>\n      <RootStyle>\n        <ContentStyle>\n          <CardHeader\n            title={\n              <>\n                {!isDesktop && (\n                  <IconButton\n                    onClick={onIconClick}\n                    sx={{\n                      textAlign: 'center',\n                      width: '100%',\n                      p: 0,\n                      m: 0,\n                    }}\n                  >\n                    <Iconify icon='pepicons-pop:line-x' width={50} />\n                  </IconButton>\n                )}\n\n                <Grid container justifyContent={'space-between'} mt={1} px={2}>\n                  <Grid item>Nombre de transporteurs trouvés :</Grid>\n                  <Grid item>{futurDepartures?.length}</Grid>\n                </Grid>\n              </>\n            }\n            sx={{ textAlign: 'start', p: { xs: 0 }, margin: 0 }}\n          />\n          <CardContent>\n            <Stack\n              direction='column'\n              sx={{\n                width: '100%',\n                textAlign: 'start',\n              }}\n              spacing={2}\n            >\n              {futurDepartures?.map((departure, index) => (\n                <DepartureItem\n                  key={index}\n                  departure={departure}\n                  onClick={() => {\n                    openCardHandler(departure);\n                    handleToggleOpenCard(index);\n                  }}\n                  selected={selectedTransporter === departure}\n                  openCard={openCardStates[index] || false}\n                />\n              ))}\n            </Stack>\n          </CardContent>\n        </ContentStyle>\n      </RootStyle>\n      <RootStyle2>\n        {openCard && (\n          <Stack sx={{ width: { md: '21vw', xs: '100vw' } }}>\n            <TransporterDetails\n              transporter={selectedDeparture.transporterId}\n              nextDeparture={selectedDeparture}\n            />\n          </Stack>\n        )}\n      </RootStyle2>\n    </MotionContainer>\n  );\n}\n\n// ----------------------------------------------------------------------\nDepartureItem.propTypes = {\n  departure: PropTypes.object,\n};\n\nfunction DepartureItem({ departure, onClick, selected, openCard }) {\n  const {\n    fName,\n    lName,\n    transporterPhoto,\n    companyActivity,\n    totalRating,\n    images,\n  } = departure.transporterId;\n\n  const { departurePoint, destinationPoint, departureTime } = departure;\n  return (\n    <Paper\n      sx={{\n        mx: 1.5,\n        borderRadius: 1,\n        border: selected ? '2px solid' : 'none',\n        my: 1,\n      }}\n    >\n      <Grid container justifyContent={'space-between'}>\n        <Grid\n          item\n          md={8}\n          sx={{\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: 0,\n              height: '80%',\n              borderRight: 'solid 1px #B0B0B0',\n            },\n          }}\n        >\n          <Stack\n            spacing={2.5}\n            sx={{\n              p: 3,\n              pb: 2.5,\n              width: '100%',\n            }}\n          >\n            <Stack direction='row' alignItems='center' spacing={2}>\n              <Avatar alt={'name'} src={transporterPhoto} />\n              <div>\n                <Typography variant='subtitle2'>\n                  {fName} {lName}\n                </Typography>\n                <Stack\n                  direction='row'\n                  display='flex'\n                  alignItems={'center'}\n                  mt={0.5}\n                  spacing={1}\n                >\n                  <Iconify icon='mdi:truck' width={16} height={16} />\n                  <Typography\n                    variant='caption'\n                    sx={{\n                      color: 'text.disabled',\n                      display: 'block',\n                    }}\n                  >\n                    {companyActivity}\n                  </Typography>\n                </Stack>\n              </div>\n            </Stack>\n\n            <Stack\n              direction='row'\n              alignItems='center'\n              spacing={1}\n              sx={{ color: '#000000' }}\n            >\n              <Stack direction='row' alignItems='center' spacing={1}>\n                <Typography variant='caption'>{departurePoint}</Typography>\n                <Iconify\n                  icon={'uil:arrow-right'}\n                  sx={{ width: '10%' }}\n                  width={18}\n                  height={18}\n                />\n              </Stack>\n\n              <Stack direction='row' alignItems='center'>\n                <Typography variant='caption'> {destinationPoint}</Typography>\n              </Stack>\n            </Stack>\n\n            <Stack direction='row' alignItems='center' spacing={2}>\n              <Typography variant='caption' sx={{ color: '#F56B3D' }}>\n                Prochain départ :\n              </Typography>\n\n              <Stack\n                direction='row'\n                alignItems='center'\n                spacing={1}\n                sx={{\n                  borderStyle: 'solid',\n                  borderWidth: '2px',\n                  borderRadius: 1,\n                  borderColor: 'text.disabled',\n                  p: '3px',\n                }}\n              >\n                <Typography variant='caption'>\n                  {fDate(departureTime)}\n                </Typography>{' '}\n                <Iconify icon='iconoir:calendar' width={18} height={18} />\n              </Stack>\n            </Stack>\n            <Stack direction='row' alignItems='center' spacing={1}>\n              <SocialsButton initialColor />\n            </Stack>\n          </Stack>\n        </Grid>\n\n        <Grid item md={4}>\n          <Stack\n            direction='row'\n            justifyContent={'center'}\n            alignItems={'center'}\n            spacing={1}\n            paddingTop={1}\n          >\n            <Typography variant='body2' sx={{ color: 'text.secondary' }}>\n              {totalRating}\n            </Typography>\n            <Rating\n              value={totalRating}\n              size='small'\n              readOnly\n              precision={0.5}\n              sx={{\n                '& .MuiRating-iconFilled': {\n                  color: '#000000', // Change this to the desired color\n                },\n                '& .MuiRating-iconEmpty': {\n                  color: '#000000', // Change this to the desired color for empty stars\n                },\n              }}\n            />\n\n            <Typography variant='body2' sx={{ color: 'text.secondary' }}>\n              ({fShortenNumber(0)})\n            </Typography>\n          </Stack>\n\n          <Stack\n            direction='row'\n            sx={{\n              p: 2.5,\n              display: 'flex',\n            }}\n          >\n            <Image src={images[0]} ratio='1/1' sx={{ borderRadius: 1.5 }} />\n          </Stack>\n\n          <Stack\n            direction='row'\n            alignItems='center'\n            justifyContent={'flex-end'}\n            mr={2}\n          >\n            <IconButton size='small' onClick={onClick}>\n              <Iconify\n                icon={\n                  openCard ? 'ri:arrow-right-s-line' : 'ri:arrow-left-s-line'\n                }\n                width={20}\n                height={20}\n                sx={{\n                  border: '1px solid #E5E8EB',\n                  borderRadius: '5px',\n                }}\n              />\n            </IconButton>\n          </Stack>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import { m } from 'framer-motion';\nimport ReactMapGL, {\n  FullscreenControl,\n  GeolocateControl,\n  Layer,\n  Marker,\n  NavigationControl,\n  Source,\n} from 'react-map-gl';\nimport Supercluster from 'supercluster';\nimport './cluster.css';\n// @mui\nimport { styled } from '@mui/material/styles';\n// components\nimport Iconify from '../../components/Iconify';\nimport Page from '../../components/Page';\nimport TransporterSearchForm from '../../sections/transporters/TransporterSearchForm';\nimport TransportersList from '../../sections/transporters/TransportersList';\n// utils\nimport { Box, Button, Grid, Tooltip, Typography } from '@mui/material';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { IconButtonAnimate, MotionContainer } from '../../components/animate';\nimport { MAPBOX_API } from '../../config';\nimport useResponsive from '../../hooks/useResponsive';\nimport { clearTransporter } from '../../redux/slices/transporter';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getRoute } from '../../utils/getRoutes';\nimport { lineStyle } from './layers';\n\n/**\n * TODO Apply search by language\n * TODO Possibility to change the place of the search form\n */\n\n// ----------------------------------------------------------------------\nconst RootStyle = styled('div')(({ theme }) => ({\n  height: '100%',\n  width: '100%',\n  backgroundColor: theme.palette.background.default,\n  background:\n    'linear-gradient(180deg, #033B3A 0%, #033938 0%, #02302F 19.03%, #000000 100%);',\n}));\n// ----------------------------------------------------------------------\n\n// ----------------------------------------------------------------------\nconst supercluster = new Supercluster({\n  radius: 75,\n  maxZoom: 20,\n});\n// ----------------------------------------------------------------------\n\nexport default function TransportersMapPage() {\n  const isDesktop = useResponsive('up', 'md');\n\n  const [selectedTransporterFromMap, setSelectedTransporterFromMap] =\n    useState('');\n\n  const [openMap, setOpenMap] = useState(false);\n  const [bounds, setBounds] = useState([-180, -85, 180, 85]);\n  const [clusters, setClusters] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [zoom, setZoom] = useState(5);\n\n  const [start, setStart] = useState(null);\n  const [end, setEnd] = useState(null);\n  const [waypoints, setWaypoints] = useState(null);\n  const [coords, setCoords] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const dispatch = useDispatch();\n\n  const { futurDepartures } = useSelector((state) => state.departure);\n\n  const mapRef = useRef();\n\n  useEffect(() => {\n    const points = futurDepartures?.map((departure) => {\n      return {\n        type: 'Feature',\n        properties: {\n          cluster: false,\n          departure,\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: [\n            departure?.departureCoordinates.coordinates[0],\n            departure?.departureCoordinates.coordinates[1],\n          ],\n        },\n      };\n    });\n\n    setPoints(points);\n  }, [futurDepartures]);\n\n  useEffect(() => {\n    supercluster.load(points);\n    setClusters(supercluster.getClusters(bounds, zoom));\n  }, [points, zoom, bounds]);\n\n  useEffect(() => {\n    if (mapRef.current) {\n      setBounds(mapRef.current.getMap().getBounds().toArray().flat());\n    }\n  }, [mapRef?.current]);\n\n  useEffect(() => {\n    // Call getRoute only if both start and end coordinates are available\n    if (start && end) {\n      getRoute(start, end, waypoints)\n        .then((response) => {\n          setCoords(response);\n        })\n        .catch((error) => console.error(error));\n    } else {\n      // If start or end coordinates are missing, clear the route\n      setCoords([]);\n    }\n  }, [start, end, waypoints]);\n\n  // geojson\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'feature',\n        geometry: {\n          type: 'LineString',\n          coordinates: [...coords],\n        },\n      },\n    ],\n  };\n\n  // end point\n  const endPoint = end\n    ? {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [...end],\n            },\n          },\n        ],\n      }\n    : null;\n\n  // Route styles\n  const layerEndPoint = {\n    id: 'end',\n    type: 'circle',\n    source: {\n      type: 'geojson',\n      data: end,\n    },\n    paint: {\n      'circle-radius': 4,\n      'circle-color': '#f30',\n    },\n  };\n\n  const onSelectTransporter = useCallback((departure) => {\n    mapRef.current?.flyTo({\n      center: [\n        departure?.departureCoordinates.coordinates[0],\n        departure?.departureCoordinates.coordinates[1],\n      ],\n      duration: 5000,\n    });\n  }, []);\n\n  return (\n    <MotionContainer>\n      <Page title='Carte transporteurs'>\n        <RootStyle>\n          <Grid container justifyContent={'space-between'}>\n            {openMap && (\n              <Grid item md={4}>\n                <Grid\n                  container\n                  justifyContent={'flex-end'}\n                  alignItems={'center'}\n                >\n                  <Grid item md={12}>\n                    <m.div>\n                      <TransporterSearchForm\n                        withPaper={!isDesktop}\n                        searchParams={searchParams}\n                      />\n                    </m.div>\n                  </Grid>\n\n                  <Grid item md={12}>\n                    <TransportersList\n                      onSelectTransporter={onSelectTransporter}\n                      selectedTransporterFromMap={selectedTransporterFromMap}\n                      onIconClick={() => {\n                        setOpenMap(!openMap);\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid item md={openMap ? 8 : 12}>\n              <>\n                <Box\n                  height={isDesktop ? '92vh' : openMap ? '65vh' : '89vh'}\n                  width={isDesktop ? '100%' : '100vw'}\n                  sx={{\n                    marginTop: isDesktop ? 8 : openMap ? 0 : 8,\n                    paddingY: isDesktop && 2,\n                    paddingRight: isDesktop ? 5 : 0,\n                    paddingLeft: isDesktop ? 3 : 0,\n                  }}\n                >\n                  <ReactMapGL\n                    initialViewState={{ latitude: 34.0084, longitude: -6.8539 }}\n                    style={{ borderRadius: isDesktop ? '6px' : 0 }}\n                    mapboxAccessToken={MAPBOX_API}\n                    mapStyle='mapbox://styles/mapbox/streets-v11'\n                    ref={mapRef}\n                    onZoomEnd={(e) => setZoom(Math.round(e.viewState.zoom))}\n                  >\n                    {clusters?.map((cluster) => {\n                      const { cluster: isCluster, point_count } =\n                        cluster.properties;\n                      const [longitude, latitude] =\n                        cluster.geometry.coordinates;\n                      if (isCluster) {\n                        return (\n                          <Marker\n                            key={`cluster-${cluster.id}`}\n                            longitude={longitude}\n                            latitude={latitude}\n                          >\n                            <div\n                              className='cluster-marker'\n                              style={{\n                                width: `${\n                                  10 + (point_count / points.length) * 25\n                                }px`,\n                                height: `${\n                                  10 + (point_count / points.length) * 25\n                                }px`,\n                              }}\n                              onClick={() => {\n                                const zoom = Math.min(\n                                  supercluster.getClusterExpansionZoom(\n                                    cluster.id\n                                  ),\n                                  20\n                                );\n                                mapRef.current.flyTo({\n                                  center: [longitude, latitude],\n                                  zoom,\n                                  speed: 1,\n                                });\n                              }}\n                            >\n                              <Typography variant='subtitle2'>\n                                {point_count}\n                              </Typography>\n                            </div>\n                          </Marker>\n                        );\n                      }\n                      return (\n                        <Marker\n                          key={`Transporteur-${cluster.properties.departure._id}`}\n                          longitude={longitude}\n                          latitude={latitude}\n                        >\n                          <Tooltip\n                            title={`${cluster.properties.departure.transporterId.fName} ${cluster.properties.departure.transporterId.lName}`}\n                          >\n                            <IconButtonAnimate\n                              elevation={2}\n                              onClick={() => {\n                                onSelectTransporter(\n                                  cluster.properties.departure\n                                );\n                                setOpenMap(true);\n                                setSelectedTransporterFromMap(\n                                  cluster.properties.departure\n                                );\n                              }}\n                            >\n                              <Iconify\n                                icon={'flowbite:map-pin-alt-solid'}\n                                width={25}\n                                height={25}\n                                sx={{ color: '#000000' }}\n                              />\n                            </IconButtonAnimate>\n                          </Tooltip>\n                        </Marker>\n                      );\n                    })}\n\n                    <Source id='routeSource' type='geojson' data={geojson}>\n                      <Layer {...lineStyle} />\n                    </Source>\n                    {endPoint && (\n                      <Source id='endSource' type='geojson' data={endPoint}>\n                        <Layer {...layerEndPoint} />\n                      </Source>\n                    )}\n                    <GeolocateControl />\n                    <FullscreenControl />\n                    <NavigationControl />\n                    {start && (\n                      <Marker longitude={start[0]} latitude={start[1]} />\n                    )}\n                  </ReactMapGL>\n                </Box>\n              </>\n            </Grid>\n            <Button\n              variant='contained'\n              color='warning'\n              size='large'\n              sx={{\n                position: 'absolute',\n                zIndex: 1,\n                left: isDesktop ? (openMap ? '60%' : '45%') : '30%',\n                bottom: '5%',\n              }}\n              startIcon={\n                <Iconify icon={'gravity-ui:list-ul'} width={20} height={20} />\n              }\n              onClick={() => {\n                setOpenMap(!openMap);\n                dispatch(clearTransporter());\n                setSelectedTransporterFromMap('');\n              }}\n            >\n              {!openMap\n                ? 'Afficher les transporteurs'\n                : 'Cacher les transporteurs'}\n            </Button>\n          </Grid>\n        </RootStyle>\n      </Page>\n    </MotionContainer>\n  );\n}\n"],"names":["TransporterSearchForm","_ref","withPaper","searchParams","console","log","isDesktop","useResponsive","isMountedRef","useIsMountedRef","pathname","useLocation","openSearchFields","setOpenSearchFields","useState","navigate","useNavigate","dispatch","useDispatch","isHome","TripSchema","Yup","shape","departure","required","destination","nullable","date","defaultValues","useMemo","get","undefined","Date","methods","useForm","resolver","yupResolver","handleSubmit","reset","setError","formState","errors","isSubmitting","useEffect","_jsxs","FormProvider","onSubmit","async","data","activePage","getDepartures","concat","error","current","children","afterSubmit","_jsx","Alert","severity","message","Stack","direction","sm","md","sx","backgroundColor","p","borderRadius","Paper","display","marginBottom","xs","width","RHFMapSearch","borderWidth","name","label","IconButton","Iconify","icon","mx","RHFDateSearch","variant","LoadingButton","type","loading","background","height","alignSelf","color","mt","gap","mb","marginTop","marginLeft","position","Grid","container","spacing","_Fragment","item","justifyContent","alignItems","ml","onFocus","ARRAY_TYPES","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","KDBush","from","ArrayBuffer","Error","magic","versionAndType","version","ArrayType","nodeSize","numItems","constructor","arguments","length","isNaN","this","Math","min","max","IndexArrayType","arrayTypeIndex","indexOf","coordsByteSize","BYTES_PER_ELEMENT","idsByteSize","padCoords","ids","coords","_pos","_finished","set","add","x","y","index","finish","numAdded","sort","range","minX","minY","maxX","maxY","stack","result","axis","pop","right","left","i","push","m","within","qx","qy","r","r2","sqDist","select","k","n","z","s","exp","sd","sqrt","floor","t","j","swapItem","swap","arr","tmp","ax","ay","bx","by","dx","dy","defaultOptions","minZoom","maxZoom","minPoints","radius","extent","generateId","reduce","map","props","fround","getClusterJSON","clusterProps","id","properties","getClusterProperties","geometry","coordinates","yLat","count","abbrev","round","propIndex","Object","assign","cluster","cluster_id","point_count","point_count_abbreviated","lngX","lng","latY","lat","sin","PI","y2","atan","RootStyle","styled","div","theme","top","zIndex","breakpoints","up","RootStyle2","_ref2","ContentStyle","Card","_ref3","boxShadow","textAlign","backgroundImage","overflow","down","paddingBottom","TransportersList","_ref4","onSelectTransporter","selectedTransporterFromMap","onIconClick","futurDepartures","useSelector","state","selectedTransporter","setSelectedTransporter","selectedDeparture","setSelectedDeparture","openCard","setOpenCard","openCardHandler","_id","openCardStates","setOpenCardStates","MotionContainer","CardHeader","title","onClick","px","margin","CardContent","DepartureItem","prevState","_objectSpread","handleToggleOpenCard","selected","TransporterDetails","transporter","transporterId","nextDeparture","_ref5","fName","lName","transporterPhoto","companyActivity","totalRating","images","departurePoint","destinationPoint","departureTime","border","my","content","borderRight","pb","Avatar","alt","src","Typography","borderStyle","borderColor","fDate","SocialsButton","initialColor","paddingTop","Rating","value","size","readOnly","precision","fShortenNumber","Image","ratio","mr","palette","default","supercluster","options","create","trees","Array","stride","load","points","time","timerId","Infinity","tree","_createTree","timeEnd","now","_cluster","getClusters","bbox","zoom","minLng","minLat","maxLng","maxLat","easternHem","westernHem","_limitZoom","clusters","getChildren","clusterId","originId","_getOriginId","originZoom","_getOriginZoom","errorMsg","pow","getLeaves","limit","offset","leaves","_appendLeaves","getTile","z2","bottom","tile","features","_addTileFeatures","getClusterExpansionZoom","expansionZoom","skipped","child","isCluster","tags","py","f","nextData","neighborIds","numPointsOrigin","numPoints","neighborId","clusterProperties","wx","wy","clusterPropIndex","numPoints2","_map","clone","original","TransportersMapPage","setSelectedTransporterFromMap","openMap","setOpenMap","bounds","setBounds","setClusters","setPoints","setZoom","start","setStart","end","setEnd","waypoints","setWaypoints","setCoords","setSearchParams","useSearchParams","mapRef","useRef","departureCoordinates","getMap","getBounds","toArray","flat","getRoute","then","response","catch","geojson","endPoint","layerEndPoint","source","paint","useCallback","_mapRef$current","flyTo","center","duration","Page","Box","paddingY","paddingRight","paddingLeft","ReactMapGL","initialViewState","latitude","longitude","style","mapboxAccessToken","MAPBOX_API","mapStyle","ref","onZoomEnd","e","viewState","Marker","className","speed","Tooltip","IconButtonAnimate","elevation","Source","Layer","lineStyle","GeolocateControl","FullscreenControl","NavigationControl","Button","startIcon","clearTransporter"],"sourceRoot":""}