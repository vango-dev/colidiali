{"version":3,"file":"static/js/790.f04de744.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["usePresence","subscribe","arguments","length","undefined","context","useContext","PresenceContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","Feature","constructor","node","this","isMounted","update","warning","noop","invariant","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","key","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","value","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","current","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","has","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","addDomEvent","eventName","handler","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","distance","abs","combineFunctions","v","pipe","_len","transformers","_key","reduce","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","distance2D","offset","timestamp","frameData","push","onStart","onMove","handlePointerMove","transformPoint","frame","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelFrame","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","timestampedPoint","lastPoint","currentVelocity","mixNumber","calcLength","axis","min","calcAxisDelta","source","origin","originPoint","scale","translate","isNaN","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","isNone","positionalKeys","transformPropOrder","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","alpha","match","parseFloat","rgbUnit","number","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","percent","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","split","replace","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","unit","defaultValue","functionRegex","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","px","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","translateX","translateY","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","render","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","clear","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","read","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","trim","isCSSVariableToken","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","now","clearTime","isProcessing","MotionGlobalConfig","useManualTiming","performance","newTime","queueMicrotask","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","index","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","definition","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","start","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","getProps","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","getContextWindow","ownerDocument","defaultView","addValueToWillChange","willChange","isMotionValue","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","presenceContext","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","animationState","setActive","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","props","externalMotionValue","initial","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","microtask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","LayoutGroupContext","jsx","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","getOptimisedAppearId","optimizedAppearDataAttribute","compareByDepth","FlatTree","children","isDirty","sort","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","appearId","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","mount","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","unmount","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","frameSteps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","ref","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","shallowCompare","prevLength","resolveVariant","custom","resolveVariantFromProps","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","getState","valueTarget","MotionHandoffAnimation","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","variantProps","getVariantContext","isControllingVariants","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","isVariantNode","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","HTMLVisualElement","renderHTML","defaultType","computedStyle","isCSSVariableName","buildHTMLStyles","SVGVisualElement","isSVGTag","camelCaseAttributes","camelToDash","buildSVGAttrs","renderSVG","domAnimation","renderer","createDomVisualElement","isSVGComponent","allowProjection","Fragment","domMax"],"sourceRoot":""}